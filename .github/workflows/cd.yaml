name: Docker-ACI-CD

on:
  [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # - name: Build and Push Docker Image
    #   run: |
    #     docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api_modele:latest ./api
    #     echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/api_modele:latest

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Azure Container Instance
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}    
          az container create \
            --resource-group ${{ secrets.RESSOURCE_GROUP }} \
            --name apimodeletemplate2 \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/api_modele:latest \
            --cpu 1 \
            --memory 1 \
            --ip-address public \
            --ports 80
            --port 8000:8000
            --environment-variables \
              "SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}" \
              "RESSOURCE_GROUP"=${{ secrets.RESSOURCE_GROUP }}" \
              "WORKSPACE_NAME"=${{ secrets.WORKSPACE_NAME }}" \
              "SERVER=${{ secrets.SERVER }}" \
              "DATABASE=${{ secrets.DATABASE }}" \
              "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" \
              "PASSWORD=${{ secrets.PASSWORD }}" \
              "SECRET_KEY=${{ secrets.SECRET_KEY }}" 

    - name: Get ACI FQDN
      id: getFQDN
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          echo "::set-output name=fqdn::$(az container show \
            --resource-group ${{ secrets.RESSOURCE_GROUP }} \
            --name apimodeletemplate2 \
            --query ipAddress.fqdn \
            --output tsv)"

    - name: Test Endpoint
      run: curl -I ${{ steps.getFQDN.outputs.fqdn }}
